Стандартная система models - DAO - controllers.
Не стал создавать отдельные DAO для генарации конечных отчетов, т.к чтение впринипе не предполагалось. 
Хотя , вероятно, и стоило бы парсер вынести туда.

Некоторые вещи захардкодил. Но достаточно легко добавить считывание тегов и путей через условные routes. (исправил)
Теперь считывается из routes

Метод prepare в котроллере выглядит достаточно массивным, однако это была вынужденна мера, чтобы не потоврять один и тот же код.

Тестовые файлы находятся непосредственно в корневой папке. Что не есть хорошо, их бы надо вынести в ресурсы. Но по определенным причинам сделать этого не смог.
(Menu.xml, Orders,xml)


Многие вещи могут показатсья излишними, такие как например ряд интерфейсов с 1 методом. Однако , мне кажется, что идея такого кастомизирования и семантического объеденения классов - хороший стиль. 

Не стал "насильно" реализовывать такие патерны, которые казалось бы могли быть уместны, как что-то наподобе: приспособлнец , команада и  т.д. 
Т.к код и так вышел достаточно большим и надеюсь , что и без этого доказал, что понимаю основы ООП

Аналогично не стал перегружать методы equals, hashcode и т.д. В силу ненужности и засорения кода в данном варианте. 
Но я безусловно понимаю их ценность и необходимость.

Хотел бы обратить внимание на то, как обрабатываются строки в XML геттерах. В оригинальных тестах между числовым значением и системах измерения стоит пробел. Поэтому я выбрал такой вот путь - substring(0,something.indexOf(" "))
Если пробел убрать - все упадет. 

Новые отчеты создаются в корневой папке при компиляции. 
Для запуска достаточно запустить main
(java 8, javaac - 1.8)

